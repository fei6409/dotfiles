#:schema https://jj-vcs.github.io/jj/latest/config-schema.json

[user]
name = "fei6409"
email = "fei6409@gmail.com"

[ui]
default-command = "log"
diff-editor = ":builtin"
diff-formatter = ":git"
editor = "nvim"
log-word-wrap = true
pager = "delta"

[aliases]
ab = ["abandon"]
des = ["describe"]
bl = ["blame"]
bm = ["bookmark", "move", "--allow-backwards"]
# Imitate Git blame
blame = ["file", "annotate"]
# Take content from any change, and move it into @: `jj consume xyz path/to/file`
consume = ["squash", "--into", "@", "--from"]
eh = ["edit", "-r", "heads(@::)"]
# Eject content from @ into any other change, interactively: `jj eject xyz`
eject = ["squash", "-i", "--from", "@", "--into"]
gf = ["git", "fetch"]
gp = ["git", "push"]
ll = ["log", "-T", "builtin_log_detailed", "-p"]
nt = ["new", "trunk()"]
ol = ["op", "log"]
rb = ["rebase"]
# Retrunk all mutable commits
rba = ["rebase", "-d", "trunk()", "-s", "roots(trunk()..mutable())"]
# Retrunk a series on trunk(): `jj rbt -s ...`
rbt = ["rebase", "-d", "trunk()"]
sh = ["show"]
sp = ["split"]
sq = ["squash"]
# Move closest bookmark ancestor to a fresh commit
tug = ["bookmark", "move", "--from", "heads(::@- & bookmarks())", "--to", "@-"]
ua = ["metaedit", "--update-author", "--update-author-timestamp"]
up = ["upload"]

[colors]
"diff token" = { underline = false }
"diff removed token" = { fg = "bright red", bg = "#441111"}
"diff added token" = { fg = "bright green", bg = "#003300"}

[fix.tools.gclfmt]
command = ["gclfmt", "--input_filename=$path"]
patterns = ["glob:'**/*.gcl'"]

[jjd-aliases]
al-config = "/configs/wireless/android/testing/atp/prod/al-eng"
doc = "/experimental/users/fshao/g3doc"
teamdoc = "/../company/teams/chromeos-mtk-bringup"
